{"version":3,"sources":["serviceWorker.js","note.js","noteboard.js","notepadmenu.js","addbutton.js","color_picker.js","notepadeditor.js","notepad.js","index.js"],"names":["Boolean","window","location","hostname","match","Note","props","state","content","title","edited","moment","Date","created","color","prevProps","prevState","snapshot","this","setState","console","log","Card","border","className","bg","text","undefined","find","e","onClick","editorActivation","Body","Title","Text","style","fontSize","format","React","Component","Noteboard","children","nextProps","nextContext","NotepadMenu","search_value","search_form_ref","createRef","handleChange","bind","handleClear","target","value","handleFilterChange","current","focus","Navbar","variant","expand","sticky","Brand","fontFamily","Toggle","aria-controls","Collapse","id","Form","inline","InputGroup","minWidth","FormControl","type","placeholder","onChange","ref","Append","Button","size","AddButton","position","bottom","right","handleClick","ColorPickerForm","current_color","currentColor","colors_list","handleColorChange","temp","map","active","changeColor","slice","ColorPicker","height","width","boxSizing","borderRadius","padding","margin","NoteEditor","restoreState","handleBackgroundExit","handleBackgroundClick","handleTitleChange","handleContentChange","edit","temp_title","temp_content","temp_color","escape_event","key","addEventListener","removeEventListener","confirm","onSave","getTime","onCancel","currentTarget","new_color","condition","save_button","disabled","pointerEvents","Container","fluid","Row","Col","Control","rows","spellCheck","onDelete","OverlayTrigger","overlay","Tooltip","zIndex","Notepad","filter","filtered_notes","all_notes","editor","editor_target","addNote","deleteNote","updateNote","handleEditorCancel","handleEditorSave","setupEditor","initialize_db","request","indexedDB","open","onupgradeneeded","db","result","createObjectStore","autoIncrement","onsuccess","did_initialized","updateNotesData","onerror","error","transaction","objectStore","delete","data_arr","openCursor","cursor","primaryKey","push","continue","x","handleDelete","new_note","put","new_filter","temp_filter","RegExp","replace","toLowerCase","note","length","getNotes","textAlign","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.26596bc1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./note.css\";\nimport moment from \"moment\";\n\nimport {Card, Button, Form} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nclass Note extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: props.content,\n            title: props.title,\n            edited: moment(new Date(props.edited)),\n            created: moment(new Date(props.created)),\n            color: props.color,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props !== prevProps){\n            this.setState({\n                content: this.props.content,\n                title: this.props.title,\n                edited: moment(new Date(this.props.edited)),\n                created: moment(new Date(this.props.created)),\n                color: this.props.color,\n            });\n        }\n    }\n\n    render(){\n        console.log(this.state.color)\n            return (\n                <>\n                    <Card border=\"black\" className=\"m-2\" bg={`${this.state.color}`}\n                          text={[\"success\", \"warning\", \"info\", \"light\"].find(e => e == this.state.color) !== undefined ? \"dark\" : \"light\"}\n                          onClick={this.props.editorActivation}>\n                        <Card.Body className=\"Note-content\">\n                            <Card.Title>\n                                {this.state.title}\n                            </Card.Title>\n                            <Card.Text>{this.state.content}</Card.Text>\n                        </Card.Body>\n                        <div className=\"d-flex justify-content-between\"  style={{fontSize: \"0.9em\"}}>\n                            <div className=\"d-block mx-2\">{this.state.edited.format(\"H:mm\")}</div>\n                            <div className=\"d-block mx-2\">{this.state.edited.format(\"DD/MM/YYYY\")}</div>\n                        </div>\n                    </Card>\n                </>\n            );\n        }\n}\n\n\nexport  default Note;\n","import React from \"react\";\nimport Note from \"./note\";\nimport \"./noteboard.css\"\n\n\n\n\nclass Noteboard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {children: props.children};\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({children: nextProps.children})\n    }\n\n    render(){\n        return (\n            <div className=\"Noteboard\">\n                {this.state.children}\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default Noteboard;\n","import React from \"react\";\nimport {Navbar, Form, Button, FormControl, InputGroup} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {X, StickiesFill} from \"react-bootstrap-icons\";\nimport \"./fonts.css\";\n\n\nclass NotepadMenu extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {search_value: \"\"}\n\n        this.search_form_ref = React.createRef();   //search form ref, used to focus after cleaning\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n    }\n\n    handleChange(e){\n        this.setState({search_value: e.target.value},\n            () => this.props.handleFilterChange(this.state.search_value));  //passes new_filter value to notepad class, that will show only notes that match the filter\n    }\n\n    handleClear(){\n        this.setState({search_value: \"\"},\n            () => {\n                this.props.handleFilterChange(this.state.search_value);\n                this.search_form_ref.current.focus();   //focus is not lost if search form is cleared\n            }, );\n    }\n\n    render(){\n        return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\"  sticky=\"top\" className=\"justify-content-between\">\n                <Navbar.Brand style={{fontFamily: \"LuckiestGuy\"}} className=\"d-flex align-items-start\">\n                    <StickiesFill color=\"gold\" className=\"mr-1\"/>\n                    Notepad\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbar-content\"/>\n                <Navbar.Collapse id=\"navbar-content\" className=\"justify-content-end align-items-center\">\n                    <Form inline className=\"d-flex justify-content-end flex-grow-1\">\n                        <InputGroup style={{minWidth: \"263px\"}}>{/*minWith to prevent whole element from expanding after entering first character*/}\n                            <FormControl type=\"text\" placeholder=\"Search notes...\" className=\"my-1\" value={this.state.search_value} onChange={this.handleChange} ref={this.search_form_ref}/>\n                            {this.state.search_value !== \"\" &&\n                            <InputGroup.Append>\n                                <Button variant=\"light\" className=\"my-1 border border-left-0\" onClick={this.handleClear}>\n                                    <X size={16}/>\n                                </Button>\n                            </InputGroup.Append>\n                            }\n                        </InputGroup>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        </>\n        );\n    }\n}\n\nexport default NotepadMenu;\n","import React from \"react\";\n\nimport {Button} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Plus} from \"react-bootstrap-icons\";\n\nclass AddButton extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n\n    render(){\n        return (\n            <Button variant=\"info\" className=\"p-1 m-1\" style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}} onClick={this.props.handleClick}>\n                <Plus size={32}/>\n            </Button>\n        );\n    }\n}\n\n\nexport default AddButton;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button} from \"react-bootstrap\";\n\nclass ColorPickerForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {current_color: props.currentColor};\n        this.colors_list = [\n            \"primary\", \"secondary\", \"success\", \"warning\",\n            \"danger\", \"dark\", \"light\", \"info\",\n        ];\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props !== prevProps){\n            this.setState({current_color: this.props.currentColor});\n        }\n    }\n\n    handleClick(value){\n        this.props.handleColorChange(value);\n        this.setState({current_color: value});\n    }\n\n    render(){\n        let temp = this.colors_list.map(e => (<ColorPicker color={e}  active={e === this.state.current_color} changeColor={this.handleClick}/>));\n        return (\n                <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\n                    <div className=\"d-flex flex-nowrap\">{temp.slice(0, 4)}</div>\n                    <div  className=\"d-flex flex-nowrap\">{temp.slice(4)}</div>\n                </div>);\n    }\n}\n\n\nclass ColorPicker extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            color: this.props.color,\n            active: this.props.active || false,\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props !== prevProps){\n            this.setState({\n                color: this.props.color,\n                active: this.props.active || false,\n            });\n        }\n    }\n\n    handleClick(e){\n        this.props.changeColor(this.props.color);\n    }\n\n    render(){\n        return (<Button\n                variant={this.state.color}\n                style={{height: \"24px\", width: \"24px\", boxSizing: \"border-box\", borderRadius: \"50%\", padding: \"0px\", margin: \"3px\", border: `${this.state.active ? \"2px solid white\" : \"1px solid grey\"}`}}\n                onClick={this.handleClick}/>);\n    }\n}\n\n\n\n\nexport default ColorPickerForm;\n","import React from \"react\";\n\nimport {Card, Button, Form, OverlayTrigger, Tooltip, Container, Col, Row} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ColorPickerForm from \"./color_picker\";\n\nimport {Trash} from \"react-bootstrap-icons\";\n\n\n\nclass NoteEditor extends React.Component{\n    constructor(props) {\n        super(props);\n        this.restoreState(props);\n\n\n\n        this.handleBackgroundExit = this.handleBackgroundExit.bind(this);\n        this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\n        this.handleTitleChange = this.handleTitleChange.bind(this);\n        this.handleContentChange = this.handleContentChange.bind(this);\n        this.restoreState = this.restoreState.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n    }\n\n    restoreState(props){\n        // console.log(this.props.target);\n\n        //true for editing existing note, false for creating new note\n        this.edit = this.props.target !== undefined;\n\n\n        this.state = {\n            temp_title: (this.edit ? props.target.title : \"\"),\n            temp_content: (this.edit  ? props.target.content : \"\"),\n            temp_color: (this.edit ? props.target.color : \"dark\"), //default note color is bootstrap \"dark\"\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //props have changed = different note is being edited, so state have to be restored to default state\n        if(this.props !== prevProps)\n            this.restoreState();\n    }\n\n\n    componentDidMount(){\n        this.escape_event = (e) => {\n            if(e.key === \"Escape\")\n                this.handleBackgroundExit();\n        };\n        //pressing esc will cancel editing note or ask user if he wants to save it\n        window.addEventListener(\"keydown\", this.escape_event);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this.escape_event);\n    }\n\n    handleBackgroundExit(){\n        let save = ((this.edit && this.props.target.content === this.state.temp_content && this.props.target.title === this.state.temp_title) ||\n            (!this.edit && this.state.temp_title === \"\" && this.state.temp_content === \"\")) ?\n            false :\n            window.confirm(\"Save document?\");\n\n        if (save)\n            this.props.onSave({\n                title: this.state.temp_title,\n                content: this.state.temp_content,\n                created: this.edit ? this.props.target.created : new Date().getTime(),\n                edited: new Date().getTime(),\n                key: this.edit ? this.props.target.key : undefined,\n                color: this.state.temp_color,\n            });\n        else\n            this.props.onCancel();\n    }\n\n    handleBackgroundClick(e) {\n        //triggered only if clicked on dark background around note-edit-form\n        if (e.target === e.currentTarget)\n            this.handleBackgroundExit();\n    }\n\n\n    handleTitleChange(e){\n        this.setState({temp_title: e.target.value});\n    }\n\n    handleContentChange(e){\n        this.setState({temp_content: e.target.value})\n    }\n\n    handleColorChange(new_color){\n        this.setState({temp_color: new_color});\n    }\n\n    render(){\n        let condition = this.state.temp_title === \"\" && this.state.temp_content === \"\";\n        let text = [\"success\", \"warning\", \"info\", \"light\"].find(e => e === this.state.temp_color) !== undefined ? \"dark\" : \"light\";\n        let variant = this.state.temp_color !== \"dark\" ? this.state.temp_color : \"secondary\";\n        let save_button = (\n            <Button onClick={() => this.props.onSave({\n                title: this.state.temp_title,\n                content: this.state.temp_content,\n                created: this.edit ? this.props.target.created : new Date().getTime(),\n                edited: new Date().getTime(),\n                key: this.edit ? this.props.target.key : undefined,\n                color: this.state.temp_color,\n            })} variant={`${variant} mr-1 my-1`} disabled={condition} style={condition ? {pointerEvents: \"none\"} : {}}>Save</Button>);\n\n\n\n        return (\n            <div className=\"Note-edit-background\" onClick={this.handleBackgroundClick}>\n                <Container fluid>\n                    <Row>\n                        <Col className=\"col-12 col-lg-10 offset-lg-1\">\n                            <Card border=\"black\" bg={\"dark\"} text=\"light\" className=\"Note-editable\">\n                                <Card.Body className=\"d-flex flex-column align-items-center\">\n                                    <Form.Control placeholder=\"Title\" className={`form-control m-2 bg-dark border-secondary text-light`} value={this.state.temp_title} rows=\"1\" onChange={this.handleTitleChange}/>\n                                    <textarea placeholder=\"Content\" spellCheck={false} className={`form-control flex-grow-1 m-2 bg-dark border-secondary text-light Note-content-editable`} value={this.state.temp_content} onChange={this.handleContentChange}/>\n                                    <div className=\"d-flex justify-content-between w-100\">\n                                        <div>\n                                            {this.edit && <Button onClick={this.props.onDelete} variant={`outline-secondary mr-1 my-1`}>\n                                                <Trash/>\n                                            </Button>}{/*Shows delete button only if user is editing already existing note*/}\n                                        </div>\n                                        <ColorPickerForm handleColorChange={this.handleColorChange} currentColor={this.state.temp_color}/>\n                                        <div className=\"d-flex justify-content-end flex-wrap\">\n                                            <Button onClick={this.props.onCancel} variant={`outline-secondary mr-1 my-1`}>Cancel</Button>\n                                            {condition\n                                                ?\n                                                <OverlayTrigger\n                                                    overlay={<Tooltip className=\"tooltip-disabled\" style={{zIndex: 3000}}>Can't save empty Note!</Tooltip>}>\n                                        <span className=\"d-inline-block\">\n                                            {save_button}\n                                        </span>\n                                                </OverlayTrigger>\n                                                :\n                                                <>{save_button}</>}\n                                        </div>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\n\nexport default NoteEditor;\n","import React from \"react\";\nimport Note from \"./note\";\nimport Noteboard from \"./noteboard\";\nimport NotepadMenu from \"./notepadmenu\";\nimport AddButton from \"./addbutton\";\n\nimport moment from \"moment\";\nimport NoteEditor from \"./notepadeditor\";\n\n\n\n\nclass Notepad extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            filter: \"\",\n            filtered_notes: [], //stores notes that match filter\n            all_notes: [],  //stores notes fetched from indexeddb\n            editor: false,   //indicates if user is editing a note rn\n            editor_target: undefined,   //indicates which note user is editing\n        };\n        this.addNote = this.addNote.bind(this);\n        this.deleteNote = this.deleteNote.bind(this);\n        this.updateNote = this.updateNote.bind(this);\n        this.handleEditorCancel = this.handleEditorCancel.bind(this);\n        this.handleEditorSave = this.handleEditorSave.bind(this);\n        this.setupEditor = this.setupEditor.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.initialize_db();\n    }\n\n    initialize_db(){\n        let request = indexedDB.open(\"NotepadDB\");\n\n        request.onupgradeneeded = (e) => {\n            this.db = request.result;\n            this.db.createObjectStore(\"Notes\", {autoIncrement: true});\n        }\n\n        request.onsuccess = (e) =>{\n            this.db = request.result;\n            this.did_initialized = true;\n\n            this.updateNotesData();    //downloads note data from local db\n\n            this.db.onerror = (e) => {\n                console.log(\"An error occured during connecting to DB: \" + e.error);\n            }\n        }\n\n        request.onerror = (e) => {\n            console.log(\"An error occured during opening DB: \" + e.error);\n        }\n    }\n\n    deleteNote(key){\n        let request = this.db.transaction(\"Notes\", \"readwrite\").objectStore(\"Notes\").delete(key);\n\n        request.onsuccess = (e) => {\n            console.log(`Succesfully deleted note #${key}`);\n            this.setState({editor: false, editor_target: undefined});\n            this.updateNotesData();\n        }\n\n        request.onerror = (e) => {\n            console.log(\"Couldn't delete note\");\n        }\n    }\n\n    //downloads notes data\n    updateNotesData(){\n        let data_arr = [];\n        let request = this.db.transaction(\"Notes\", \"readwrite\").objectStore(\"Notes\").openCursor();\n\n        request.onsuccess =  (e) => {\n            let cursor = e.target.result;\n\n            if(cursor){\n                let temp = {};\n                temp.key = cursor.primaryKey;\n                temp.title = cursor.value.title;\n                temp.content = cursor.value.content;\n                temp.created = cursor.value.created;\n                temp.edited = cursor.value.edited;\n                temp.color = cursor.value.color;\n                data_arr.push(temp);\n                cursor.continue();\n            }\n            else{\n                this.setState({all_notes: data_arr});\n                this.handleFilterChange(this.state.filter);\n\n            }\n        }\n\n        request.onerror = (e) => {\n            console.log(\"Failed to fetch data\");\n        }\n    }\n\n    getNotes(){\n        return this.state.filtered_notes.map(x => <Note key={x.key} title={x.title} content={x.content} edited={x.edited} created={x.created} color={x.color} handleDelete={this.deleteNote.bind(this, x.key)} editorActivation={this.setupEditor.bind(this, x)}/>);\n    }\n\n    addNote(){\n        this.setState({editor: true});\n    }\n\n    setupEditor(target){\n        this.setState({editor: true, editor_target: target});\n    }\n\n    updateNote(new_note){\n        console.log(new_note);\n\n        let request = this.db.transaction(\"Notes\", \"readwrite\").objectStore(\"Notes\").put({\n            title: new_note.title,\n            content: new_note.content,\n            edited: new_note.edited,\n            created: new_note.created,\n            color: new_note.color},\n            new_note.key);  //key is undefined if new note is being created - indexeddb will create it by itself\n\n        request.onsuccess = () =>{\n            console.log(\"Succesfully updated note\")\n            this.updateNotesData(); //makes app download data from db again so it is synced\n        }\n\n        request.onerror = () => {\n            console.log(\"Failed to update note\");\n        }\n    }\n\n    handleEditorCancel(){\n        this.setState({editor: false, editor_target: undefined});\n    }\n\n    handleEditorSave(new_note){\n        this.setState({editor: false, editor_target: undefined});\n        this.updateNote(new_note);\n    }\n\n    handleFilterChange(new_filter){\n        //Terminating characters code copied from https://makandracards.com/makandra/15879-javascript-how-to-generate-a-regular-expression-from-a-string\n        let temp_filter = new RegExp(new_filter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&').toLowerCase());\n\n        let temp = this.state.all_notes.filter(note =>\n            (note.title.toLowerCase().match(temp_filter) !== null || note.content.toLowerCase().match(temp_filter) !== null)\n        );\n        this.setState({\n            filter: new_filter,\n            filtered_notes: temp,\n        });\n    }\n\n    render(){\n        if(this.did_initialized === undefined)\n            return (<></>);\n        else{\n            return (\n                <>\n                    <NotepadMenu handleFilterChange={this.handleFilterChange}/>\n                    {(this.state.filtered_notes.length !== 0 ? <Noteboard children={this.getNotes()}/> : <h5 style={{textAlign: \"center\", color: \"white\", margin: \"20px\"}}>\n                        {this.state.filter === \"\" ? \"There are no notes to show!\" : \"No notes matching filter!\"}\n                    </h5>)}\n                    <AddButton handleClick={this.addNote}/>\n                    {this.state.editor === true &&\n                    <NoteEditor\n                        target={this.state.editor_target}\n                        onDelete={(this.state.editor_target === undefined ? undefined : this.deleteNote.bind(this, this.state.editor_target.key))}\n                        onCancel={this.handleEditorCancel}\n                        onSave={this.handleEditorSave}/>}\n                </>\n            );\n        }\n    }\n\n}\n\n\nexport default Notepad;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Notepad from \"./notepad\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Notepad/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}